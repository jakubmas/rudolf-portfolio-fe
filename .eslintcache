[{"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/index.tsx":"1","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/App.tsx":"2","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Header.tsx":"3","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Theme.ts":"4","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/theme.ts":"5","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Footer.tsx":"6","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/LandingPage.tsx":"7","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/SideContentContainer.tsx":"8","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/About.tsx":"9"},{"size":204,"mtime":1609782293272,"results":"10","hashOfConfig":"11"},{"size":1292,"mtime":1610812176365,"results":"12","hashOfConfig":"11"},{"size":8699,"mtime":1610811672015,"results":"13","hashOfConfig":"11"},{"size":1491,"mtime":1609539158807,"results":"14","hashOfConfig":"11"},{"size":623,"mtime":1610736570040,"results":"15","hashOfConfig":"11"},{"size":666,"mtime":1609784790548,"results":"16","hashOfConfig":"11"},{"size":2308,"mtime":1610797298642,"results":"17","hashOfConfig":"11"},{"size":4529,"mtime":1610819648572,"results":"18","hashOfConfig":"11"},{"size":1873,"mtime":1610820078430,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ns1u6p",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/index.tsx",[],["40","41"],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/App.tsx",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Header.tsx",["42"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/styles'\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport { Typography } from '@material-ui/core'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\ninterface Tab {\n  to: string\n  label: string\n  active: boolean\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    toolbarMargin: {\n      ...theme.mixins.toolbar,\n      marginBottom: '3em'\n    },\n    headerContainer: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      margin: 0\n    },\n    toolbarContainer: {\n      marginLeft: '5%',\n      marginRight: '5%',\n      '& .MuiTabs-flexContainer': {\n        justifyContent: 'space-evenly'\n      }\n    },\n    logo: {\n      fontSize: '0.7rem',\n      lineHeight: '1'\n    },\n    logoContainer: {\n      marginLeft: '2rem',\n      padding: 0,\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    tab: {\n      textTransform: 'none',\n      fontSize: '1rem',\n      minWidth: 10\n    },\n    languageToggler: {\n      marginRight: '2rem',\n      fontSize: '0.7rem'\n    },\n    bottomLine: {\n      borderTop: '1px solid',\n      borderColor: theme.palette.text.primary,\n      width: '90%',\n      margin: '0 auto',\n      borderRadius: '200px'\n    },\n    tabsContainer: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-evenly'\n    },\n    tabActive: {\n      borderTop: '1px solid',\n      borderColor: theme.palette.text.primary,\n      width: '120%'\n    },\n    tabInactive: {\n      border: '1px solid transparent',\n      width: '120%'\n    },\n    tabButtonContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      boxSizing: 'border-box'\n    },\n    drawer: {\n      backgroundColor: theme.palette.background.default,\n      width: '30vw',\n      [theme.breakpoints.down('xs')]: {\n        width: '100vw'\n      }\n    },\n    drawerItem: {\n      ...theme.typography,\n      display: 'flex',\n      paddingBottom: '1.2rem',\n      justifyContent: 'center',\n      fontSize: '1.2rem',\n      fontWeight: 300,\n      [theme.breakpoints.down('xs')]: {\n        width: '100vw',\n        fontSize: '2rem'\n      }\n    },\n    drawerListContainer: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    drawerLogoContainer: {\n      justifyContent: 'center',\n      '& .MuiTypography-root': {\n        padding: '1rem',\n        fontSize: '1.1rem',\n        fontWeight: 300\n      },\n      [theme.breakpoints.down('xs')]: {\n        display: 'flex',\n        flexDirection: 'column',\n        '&:hover': {\n          backgroundColor: 'transparent'\n        },\n        '& .MuiTypography-root': {\n          fontSize: '1.5rem',\n          fontWeight: 300\n        }\n      }\n    },\n    menuButton: {\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    drawerCloseButton: {\n      alignSelf: 'start',\n      paddingBottom: '5vh',\n      '&:hover': {\n        backgroundColor: 'transparent'\n      }\n    },\n    drawerLanguageToggler: {\n      marginBottom: '10vh',\n      justifyContent: 'center',\n      '& .MuiTypography-root': {\n        fontSize: '1.1rem',\n        fontWeight: 300\n      }\n    }\n  }\n})\n\nexport default function Header() {\n  const theme = useTheme()\n  const classes = useStyles()\n\n  const iOS =\n    (process as any).browser && /iPad|iPhone|iPod/.test(navigator.userAgent)\n  const matchesSmall = useMediaQuery(theme.breakpoints.down('sm'))\n  const matchesExtraSmall = useMediaQuery(theme.breakpoints.down('xs'))\n\n  const [tabs, setTabs] = useState<Tab[]>([\n    {\n      to: '/work',\n      label: 'Work',\n      active: false\n    },\n    {\n      to: '/about',\n      label: 'About',\n      active: false\n    },\n    {\n      to: '/contact',\n      label: 'Contact',\n      active: false\n    }\n  ])\n  const [openDrawer, setOpenDrawer] = useState(false)\n\n  const handleChange = (index: number, activeTab: Tab) => {\n    let newArray = [...tabs]\n    newArray.forEach((element) => {\n      element.active = false\n    })\n    newArray[index] = { ...activeTab, active: true }\n    setTabs(newArray)\n  }\n\n  const handleDisacitveTabs = () => {\n    let newArray = [...tabs]\n    newArray.forEach((element) => {\n      element.active = false\n    })\n    setTabs(newArray)\n  }\n\n  useEffect(() => {\n    let newArray = [...tabs]\n    newArray.forEach((element) => {\n      if (element.to === window.location.pathname) element.active = true\n    })\n    setTabs(newArray)\n  }, [])\n\n  useEffect(() => {\n    if (!matchesSmall && !matchesExtraSmall) {\n      setOpenDrawer(false)\n    }\n  }, [matchesExtraSmall, matchesSmall])\n\n  const renderTabs = () => {\n    return tabs.map((tab, i) => (\n      <div className={classes.tabButtonContainer} key={tab.label}>\n        <Button\n          disableRipple\n          className={classes.tab}\n          component={Link}\n          to={tab.to}\n          onClick={() => handleChange(i, tab)}\n        >\n          {tab.label}\n        </Button>\n        {\n          <div\n            className={tab.active ? classes.tabActive : classes.tabInactive}\n          />\n        }\n      </div>\n    ))\n  }\n\n  const logoButton = (\n    <Button\n      disableRipple\n      component={Link}\n      to=\"/\"\n      className={classes.logoContainer}\n      onClick={() => {\n        handleDisacitveTabs()\n        setOpenDrawer(false)\n      }}\n    >\n      <Typography component=\"p\" className={classes.logo}>\n        Rudolf\n        <br />\n        Maslowski\n      </Typography>\n    </Button>\n  )\n\n  const languageToggler = (\n    <Typography component=\"p\" className={classes.languageToggler}>\n      PL/<strong>EN</strong>\n    </Typography>\n  )\n\n  const largeHeader = (\n    <>\n      {logoButton}\n      <div className={classes.tabsContainer}>{renderTabs()}</div>\n      {languageToggler}\n    </>\n  )\n\n  const drawer = (\n    <>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{\n          paper: classes.drawer\n        }}\n      >\n        <div>\n          <List disablePadding className={classes.drawerListContainer}>\n            <ListItem className={classes.drawerLogoContainer}>\n              {matchesExtraSmall && (\n                <IconButton\n                  className={classes.drawerCloseButton}\n                  onClick={() => setOpenDrawer(false)}\n                  disableRipple\n                >\n                  <CloseIcon />\n                </IconButton>\n              )}\n              {logoButton}\n            </ListItem>\n            <div>\n              {tabs.map((tab, i) => (\n                <ListItem\n                  key={`${tab}${i}`}\n                  button\n                  component={Link}\n                  to={tab.to}\n                  selected={tab.active}\n                  onClick={() => {\n                    setOpenDrawer(false)\n                    handleChange(i, tab)\n                  }}\n                >\n                  <ListItemText\n                    className={classes.drawerItem}\n                    disableTypography\n                  >\n                    {tab.label}\n                  </ListItemText>\n                </ListItem>\n              ))}\n            </div>\n            <ListItem className={classes.drawerLanguageToggler}>\n              {languageToggler}\n            </ListItem>\n          </List>\n        </div>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.menuButton}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon />\n      </IconButton>\n      {logoButton}\n    </>\n  )\n\n  return (\n    <>\n      <AppBar\n        position=\"static\"\n        elevation={0}\n        className={classes.headerContainer}\n      >\n        <Toolbar disableGutters className={classes.toolbarContainer}>\n          {matchesSmall ? drawer : largeHeader}\n        </Toolbar>\n        {!matchesExtraSmall && <div className={classes.bottomLine} />}\n      </AppBar>\n      <Toolbar />\n    </>\n  )\n}\n","/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Theme.ts",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/theme.ts",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/Footer.tsx",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/LandingPage.tsx",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/ui/SideContentContainer.tsx",[],"/Users/jakub/Documents/web/rudolf-portfolio/rudolf-portfolio/src/components/About.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":210,"column":6,"nodeType":"49","endLine":210,"endColumn":8,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tabs'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [tabs]",{"range":"56","text":"57"},[5114,5116],"[tabs]"]